services:

  simulator_prod:
    build:
      context: .
      target: final
      dockerfile: Dockerfile.prod
    container_name: simulator_prod
    environment:
      - MONGO_URI=mongodb://admin:admin@mongo:27017/routes?authSource=admin&directConnection=true
      - KAFKA_BROKER=kafka:9092
      - KAFKA_ROUTE_TOPIC=route
      - KAFKA_FREIGHT_TOPIC=freight
      - KAFKA_SIMULATION_TOPIC=simulation
      - KAFKA_GROUP_ID=route-group

  simulator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: simulator
    depends_on:
      - mongo
      - kafka
    volumes:
      - .:/app
    environment:
      - MONGO_URI=mongodb://admin:admin@mongo:27017/routes?authSource=admin&directConnection=true
      - KAFKA_BROKER=kafka:9092
      - KAFKA_ROUTE_TOPIC=route
      - KAFKA_FREIGHT_TOPIC=freight
      - KAFKA_SIMULATION_TOPIC=simulation
      - KAFKA_GROUP_ID=route-group

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3

  kafka-topic-generator:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
      kafka-topics --create --topic route --if-not-exists --bootstrap-server kafka:9092 &&
      kafka-topics --create --topic freight --if-not-exists --bootstrap-server kafka:9092 &&
      kafka-topics --create --topic simulation --if-not-exists --bootstrap-server kafka:9092"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021